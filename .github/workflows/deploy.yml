name: Deploy to Production

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Install dependencies
        run: npm ci
        
      - name: Generate Prisma Client
        run: npx prisma generate
      
      - name: Build Project
        run: npm run build
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          NEXTAUTH_URL: ${{ secrets.NEXTAUTH_URL }}
          NEXTAUTH_SECRET: ${{ secrets.NEXTAUTH_SECRET }}
      
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
        continue-on-error: true
      
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
        continue-on-error: true
      
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
        continue-on-error: true
      
      - name: Run post-deployment checks
        run: |
          echo "Waiting for deployment to be ready..."
          sleep 30
          
          # Check if the site is accessible
          response=$(curl -s -o /dev/null -w "%{http_code}" https://peakplay.vercel.app || echo "000")
          if [ $response -eq 200 ]; then
            echo "Deployment successful! Site is accessible."
          else
            echo "Deployment verification failed. HTTP status: $response"
            echo "This may be normal if the domain is not yet configured."
          fi
        continue-on-error: true 